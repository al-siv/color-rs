name: Multi-Platform Release Builds

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        default: 'v0.18.0'
  push:
    tags:
      - 'v*'

jobs:
  build-cross-platform:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: color-rs-v0.18.0-x86_64-linux
            
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: color-rs-v0.18.0-x86_64-linux-musl
            
          - os: macos-latest
            target: x86_64-apple-darwin
            name: color-rs-v0.18.0-x86_64-macos
            
          - os: macos-latest
            target: aarch64-apple-darwin
            name: color-rs-v0.18.0-aarch64-macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (Linux musl only)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Configure Cargo for musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          mkdir -p .cargo
          cat >> .cargo/config.toml << EOF
          [target.x86_64-unknown-linux-musl]
          linker = "musl-gcc"
          EOF

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary (Unix)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/color-rs ${{ matrix.name }}
          chmod +x ${{ matrix.name }}

      - name: Upload to existing release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the tag from either workflow input or git ref
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG=${GITHUB_REF#refs/tags/}
          fi
          
          # Upload the binary to the existing release
          gh release upload "$TAG" "${{ matrix.name }}" --clobber

  update-release-notes:
    name: Update Release with Multi-Platform Assets
    needs: build-cross-platform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Update release description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the tag
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG=${GITHUB_REF#refs/tags/}
          fi
          
          # Add a note about multi-platform completion
          gh release edit "$TAG" --notes "$(cat releases/v0.18.0/RELEASE_NOTES.md)

## ðŸŽ¯ Multi-Platform Builds

All platform binaries are now available:

- **Windows x64**: \`color-rs-v0.18.0-x86_64-windows.exe\` 
- **Linux x64**: \`color-rs-v0.18.0-x86_64-linux\`
- **Linux x64 (musl)**: \`color-rs-v0.18.0-x86_64-linux-musl\` (static binary)
- **macOS x64**: \`color-rs-v0.18.0-x86_64-macos\`
- **macOS ARM64**: \`color-rs-v0.18.0-aarch64-macos\` (Apple Silicon)

### Download Instructions:
\`\`\`bash
# Windows (PowerShell)
Invoke-WebRequest -Uri 'https://github.com/al-siv/color-rs/releases/download/$TAG/color-rs-v0.18.0-x86_64-windows.exe' -OutFile 'color-rs.exe'

# Linux x64
curl -L https://github.com/al-siv/color-rs/releases/download/$TAG/color-rs-v0.18.0-x86_64-linux -o color-rs
chmod +x color-rs

# Linux x64 (static binary)
curl -L https://github.com/al-siv/color-rs/releases/download/$TAG/color-rs-v0.18.0-x86_64-linux-musl -o color-rs
chmod +x color-rs

# macOS x64 (Intel)
curl -L https://github.com/al-siv/color-rs/releases/download/$TAG/color-rs-v0.18.0-x86_64-macos -o color-rs
chmod +x color-rs

# macOS ARM64 (Apple Silicon)
curl -L https://github.com/al-siv/color-rs/releases/download/$TAG/color-rs-v0.18.0-aarch64-macos -o color-rs
chmod +x color-rs
\`\`\`

ðŸŽ‰ **Multi-platform release complete!** This release includes optimized binaries for all major platforms."
